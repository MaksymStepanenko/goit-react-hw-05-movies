{"version":3,"file":"static/js/186.662a16a8.chunk.js","mappings":"yNAkDA,UA7CgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAuBV,OAnBEE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACF,IAAMG,EAAgB,mCAAG,gHAGEC,EAAAA,EAAAA,IAAoBJ,GAHtB,OAGfK,EAHe,OAKfP,EAAUO,EAASC,QAEzBP,EAAWD,GAPU,qJAAH,qDActBK,GAfsB,CAgBvB,GAAE,CAACH,KAGF,yBACuB,KAAb,OAAPF,QAAO,IAAPA,OAAA,EAAAA,EAASS,SACR,wBACGT,EAAQU,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,GAC/B,OACE,2BACE,4BAASF,KACT,uBAAIC,MAFGC,EAKZ,OAGH,wBAAI,kCAIX,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchReviewsDetails } from '../../servises/api';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n  //   const [isLoading, setIsLoading] = useState(false);\n  //   const [error, setError] = useState(null);\n\n    useEffect(() => {\n      if (!movieId) return;\n    const fetchReviewsData = async () => {\n      try {\n        // setIsLoading(true);\n        const response = await fetchReviewsDetails(movieId);\n        // console.log(response.results);\n        const reviews = response.results;\n        // const cast = response.cast;\n        setReviews(reviews);\n      } catch (error) {\n        // setError(error.message);\n      } finally {\n        // setIsLoading(false);\n      }\n    };\n    fetchReviewsData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {reviews?.length !== 0 ? (\n        <ul>\n          {reviews.map(({ author, content, id }) => {\n            return (\n              <li key={id}>\n                <strong>{author}</strong>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2>this film don't have reviews</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchReviewsData","fetchReviewsDetails","response","results","length","map","author","content","id"],"sourceRoot":""}