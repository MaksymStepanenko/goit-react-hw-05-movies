{"version":3,"file":"static/js/76.6fe45dc7.chunk.js","mappings":"6PACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mB,SC6D3E,EAvDa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,SAERE,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CACA,IAAMG,EAAa,mCAAG,sGAElBJ,GAAa,GAFK,UAGKK,EAAAA,EAAAA,IAAiBJ,GAHtB,OAGZK,EAHY,OAIZT,EAAOS,EAAST,KACtBC,EAAQD,GALU,gDAOlBU,QAAQC,IAAR,MAPkB,yBASlBR,GAAa,GATK,4EAAH,qDAYnBI,GAboB,CAcrB,GAAE,CAACH,IAKJ,OACE,2BACGF,IAAa,SAACU,EAAA,EAAD,IACI,KAAb,OAAJZ,QAAI,IAAJA,OAAA,EAAAA,EAAMa,SACL,eAAIC,UAAWC,EAAf,SACGf,EAAKgB,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,UAAWC,EAAS,EAATA,GAC1C,OACE,gBAAaN,UAAWC,EAAxB,WACE,gBACEM,IAAKJ,EACLK,IACmB,OAAjBJ,EAAA,6CAC0CA,GAd1D,8EAiBcK,MAAM,WAER,cAAGT,UAAWC,EAAd,SAAyBE,KACzB,cAAGH,UAAWC,EAAd,SAAyBI,MAXlBC,EAcZ,OAGH,wBAAI,qCAIX,C","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"text\":\"Cast_text__P2vgu\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCastDetails } from '../../servises/api';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCastData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await fetchCastDetails(movieId);\n        const cast = response.cast;\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchCastData();\n  }, [movieId]);\n\n  const defaultImg =\n    'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {cast?.length !== 0 ? (\n        <ul className={css.list}>\n          {cast.map(({ name, profile_path, character, id }) => {\n            return (\n              <li key={id} className={css.item}>\n                <img\n                  alt={name}\n                  src={\n                    profile_path !== null\n                      ? `https://image.tmdb.org/t/p/original${profile_path}`\n                      : defaultImg\n                  }\n                  width=\"200px\"\n                />\n                <p className={css.text}>{name}</p>\n                <p className={css.text}>{character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2>this film don't have cast list</h2>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["useState","cast","setCast","isLoading","setIsLoading","movieId","useParams","useEffect","fetchCastData","fetchCastDetails","response","console","log","Loader","length","className","css","map","name","profile_path","character","id","alt","src","width"],"sourceRoot":""}