{"version":3,"file":"static/js/876.c6549e7d.chunk.js","mappings":"uQACA,GAAgB,UAAY,oCAAoC,aAAe,uCAAuC,WAAa,qCAAqC,SAAW,oC,SCyCnL,EAxCyB,SAAAA,GACvB,MACEA,EAAMC,OADAC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,YAAaC,EAA9C,EAA8CA,aAAcC,EAA5D,EAA4DA,aAAcC,EAA1E,EAA0EA,WAEpEC,EAAYC,KAAKC,MAAqB,GAAfL,GACvBM,EAAI,OAAGL,QAAH,IAAGA,OAAH,EAAGA,EAAcM,MAAM,EAAG,GAEpC,OADAC,QAAQC,IAAIf,IAEV,iBAAKgB,UAAWC,EAAAA,UAAhB,WACE,gBAAKD,UAAWC,EAAAA,aAAhB,UACE,gBACEC,IAAKhB,EACLiB,IAAG,6CAAwCd,GAC3Ce,MAAM,aAGV,iBAAKJ,UAAWC,EAAAA,cAAhB,WACE,0BACGf,EAAM,IAAEU,MAGL,yBAAG,eAAaH,EAAU,aAAWD,MAC3C,uBAAG,eACH,cAAGQ,UAAWC,EAAAA,SAAd,SAA6Bd,KAC7B,uBAAG,YACFkB,MAAMC,QAAQlB,KACb,eAAIY,UAAWC,EAAAA,WAAf,SACGb,EAAOmB,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,GACnB,OACE,yBACE,0BAAOD,KADAC,EAIZ,WAMZ,ECvCD,EAA4B,gCAA5B,EAAsE,8BAAtE,EAA0G,0BAA1G,EAA+I,+BCezIC,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,0BAAN,IACZC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAAN,IA6CrB,EA1CsB,WAAO,IAAD,IAC1B,GAA4BE,EAAAA,EAAAA,UAAS,CAAC,GAAtC,eAAO5B,EAAP,KAAe6B,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAcpD,OAZAC,EAAAA,EAAAA,YAAU,WACR,GAAKR,EAAL,CACA,IAAMS,EAAe,mCAAG,8GAEGC,EAAAA,EAAAA,IAAgBV,GAFnB,OAEdW,EAFc,OAGpBZ,EAAUY,GAHU,gDAKpB5B,QAAQC,IAAI,KAAM4B,SALE,yDAAH,qDAQrBH,GAToB,CAUrB,GAAE,CAACT,KAEF,iBAAKf,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAM2B,GAAIT,EAAaU,QAAS7B,UAAWC,EAA3C,SAAwD,aAGxD,SAAC,EAAD,CAAkBhB,OAAQA,KAC1B,iBAAKe,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAS2B,GAAG,OAAO5B,UAAWC,EAA9B,SAA4C,UAG5C,SAAC,KAAD,CAAS2B,GAAG,UAAU5B,UAAWC,EAAjC,SAA+C,gBAIjD,SAAC,EAAA6B,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,KAAK,OAAOC,SAAS,SAACxB,EAAD,CAAMK,QAASA,OAC3C,SAAC,KAAD,CAAOkB,KAAK,UAAUC,SAAS,SAACtB,EAAD,CAASG,QAASA,aAK1D,C,uNC1DKoB,EAAW,+BACXC,EAAU,mCAEHC,EAAgB,mCAAG,sGACPC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,uCACqBC,IAFd,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,qDAOhBd,EAAe,mCAAG,WAAMV,GAAN,yFACNuB,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA+BpB,EAA/B,oBAAkDqB,IAD5C,uBACrBG,EADqB,EACrBA,KADqB,kBAEtBA,GAFsB,2CAAH,sDAKfC,EAAgB,mCAAG,WAAMzB,GAAN,yFACPuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,IAFpB,uBACtBG,EADsB,EACtBA,KADsB,kBAIvBA,GAJuB,2CAAH,sDAOhBE,EAAmB,mCAAG,WAAM1B,GAAN,yFACVuB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACApB,EADA,4BAC2BqB,IAFjB,uBACzBG,EADyB,EACzBA,KADyB,kBAI1BA,GAJ0B,2CAAH,sDAOnBG,EAAkB,mCAAG,WAAMC,GAAN,yFACTL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,+BACaQ,EADb,oBAC8BP,IAFrB,uBACxBG,EADwB,EACxBA,KADwB,kBAIzBA,GAJyB,2CAAH,sDAOlBK,EAAW,SAAAC,GACtB,MAAM,sCAAN,OAA6CA,EAC9C,C","sources":["webpack://react-homework-template/./src/components/DetailsMovieCard/DetailsMovieCard.module.css?d5db","components/DetailsMovieCard/DetailsMovieCard.jsx","webpack://react-homework-template/./src/pages/style/MovieDetails.module.css?806b","pages/MovieDetails.jsx","servises/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"DetailsMovieCard_container__eFKLk\",\"imgContainer\":\"DetailsMovieCard_imgContainer__QAWVT\",\"genresList\":\"DetailsMovieCard_genresList__iILtO\",\"overview\":\"DetailsMovieCard_overview__SZA10\"};","import css from './DetailsMovieCard.module.css'\n\nconst DetailsMovieCard = props => {\n  const { title, overview, genres, poster_path, vote_average, release_date, vote_count } =\n    props.movies;\n  const userScore = Math.floor(vote_average * 10);\n  const date = release_date?.slice(0, 4);\n  console.log(props);\n  return (\n    <div className={css.container}>\n      <div className={css.imgContainer}>\n        <img\n          alt={title}\n          src={`https://image.tmdb.org/t/p/original${poster_path}`}\n          width=\"300px\"\n        />\n      </div>\n      <div className={css.infoContainer}>\n        <h2>\n          {title} {date}\n        </h2>\n\n              <p>User Score: {userScore}%  Votes: {vote_count}</p>\n        <p>Overview:</p>\n        <p className={css.overview}>{overview}</p>\n        <p>Genres:</p>\n        {Array.isArray(genres) && (\n          <ul className={css.genresList}>\n            {genres.map(({ name, id }) => {\n              return (\n                <li key={id}>\n                  <span>{name}</span>\n                </li>\n              );\n            })}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DetailsMovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__N4WPh\",\"btnBack\":\"MovieDetails_btnBack__TlBsH\",\"nav\":\"MovieDetails_nav__HiH2U\",\"linkInfo\":\"MovieDetails_linkInfo__hWUy1\",\"active\":\"MovieDetails_active__2+YjY\"};","import { useState, useEffect, useRef, Suspense, lazy } from 'react';\nimport {\n  useParams,\n  NavLink,\n  Link,\n  Routes,\n  Route,\n  useLocation,\n} from 'react-router-dom';\n\nimport { fetchMoviesById } from '../servises/api';\n\nimport { Loader } from 'components/Loader/Loader';\nimport DetailsMovieCard from '../components/DetailsMovieCard/DetailsMovieCard';\nimport css from './style/MovieDetails.module.css';\n\nconst Cast = lazy(() => import('components/Cast/Cast'));\nconst Reviews = lazy(() => import('components/Reviews/Reviews'));\n\n\nconst MoviesDetails = () => {\n  const [movies, setMovies] = useState({});\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMoviesData = async () => {\n      try {\n        const response = await fetchMoviesById(movieId);\n        setMovies(response);\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n    fetchMoviesData();\n  }, [movieId]);\n  return (\n    <div className={css.container}>\n      <Link to={backLinkHref.current} className={css.btnBack}>\n        Go back\n      </Link>\n      <DetailsMovieCard movies={movies} />\n      <nav className={css.nav}>\n        <NavLink to=\"cast\" className={css.linkInfo}>\n          Cast\n        </NavLink>\n        <NavLink to=\"reviews\" className={css.linkInfo}>\n          Reviews\n        </NavLink>\n      </nav>\n      <Suspense fallback={<Loader />}>\n        <Routes>\n          <Route path=\"cast\" element={<Cast movieId={movieId} />} />\n          <Route path=\"reviews\" element={<Reviews movieId={movieId} />} />\n        </Routes>\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MoviesDetails;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a197af2e5cbf9f65cf4b05209460ed0e';\n\nexport const fetchTrendMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesById = async movieId => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n  return data;\n};\n\nexport const fetchCastDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchReviewsDetails = async movieId => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?query=${query}&api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const imageURL = value => {\n  return `https://image.tmdb.org/t/p/original${value}`;\n}\n\n// https://api.themoviedb.org/3/search/movie?query=qwerty&api_key=a197af2e5cbf9f65cf4b05209460ed0e"],"names":["props","movies","title","overview","genres","poster_path","vote_average","release_date","vote_count","userScore","Math","floor","date","slice","console","log","className","css","alt","src","width","Array","isArray","map","name","id","Cast","lazy","Reviews","useState","setMovies","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchMoviesData","fetchMoviesById","response","message","to","current","Suspense","fallback","Loader","path","element","BASE_URL","API_KEY","fetchTrendMovies","axios","data","fetchCastDetails","fetchReviewsDetails","fetchMoviesByQuery","query","imageURL","value"],"sourceRoot":""}